!function(){"use strict";const e=document.querySelector("#profile-edit-button"),t=document.querySelector("#profile-add-button"),s=document.querySelector("#profile-image-button");class r{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._id=e._id,this.cardData=e.cardData,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleLikeClick=r,this._handleDeleteSubmit=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteSubmit(this._id,this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_isLiked(){return this._isLiked}_renderLikes(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}updateLikes(e){this._isLiked=e,this._renderLikes()}removeCard(){this._cardElement.remove(),this._cardElement=null}generateCard(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._setEventListeners(),this._renderLikes(),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement}}class i{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}_enableButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}resetFormValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._disableButton()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._setEventListeners()}}class n{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){e.preventDefault(),"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class a extends o{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}close(){super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close(),this._popupForm.reset()})),super.setEventListeners()}setLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}}const l=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_serverResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._serverResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._serverResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}createNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify(e),headers:this._headers}).then(this._serverResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._serverResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._serverResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._serverResponse)}updateUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:t,about:s}),headers:this._headers}).then(this._serverResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar/`,{method:"PATCH",body:JSON.stringify({avatar:e}),headers:this._headers}).then(this._serverResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9aa267fe-3315-41ab-a072-2d6dbd5ca77b","Content-Type":"application/json"}});let h;l.getAppInfo().then((e=>{let[t,s]=e;c.setUserInfo(s.name,s.about),c.setAvatar(s.avatar),h=new n({items:t.reverse(),renderer:e=>{const t=f(e);h.addItem(t)}},".cards__list"),h.renderItems()})).catch((e=>{console.error(e)}));const d={},u=new class extends o{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector(".modal__image"),this._previewTitle=this._popupElement.querySelector("#modal-preview")}open(e){this._previewTitle.textContent=e.name,this._previewImage.src=e.link,this._previewImage.alt=e.name,super.open()}}("#modal-image"),c=new class{constructor(e,t,s){this._userNameElement=document.querySelector(e),this._userDescriptionElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userDescriptionElement.textContent}}setUserInfo(e,t){this._userNameElement.textContent=e,this._userDescriptionElement.textContent=t}setAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__paragraph",".profile__image"),_=new class extends o{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}setLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}}("#modal-confirm"),m=new a("#modal-add",(e=>{m.setLoading(!0),l.createNewCard(e).then((e=>{const t=f(e);h.addItem(t),m.close()})).catch((e=>{console.error(e)})).finally((()=>{m.setLoading(!1)}))})),p=new a("#modal-edit",(e=>{p.setLoading(!0),l.updateUserInfo(e).then((()=>{c.setUserInfo(e.name,e.about),p.close()})).catch((e=>{console.error(e)})).finally((()=>{p.setLoading(!1)}))})),v=new a("#modal-profile-image",(e=>{v.setLoading(!0),l.updateAvatar(e.link).then((e=>{c.setAvatar(e.avatar),v.close()})).catch((e=>{console.error(e)})).finally((()=>{v.setLoading(!1)}))}));function E(e){e._isLiked?l.dislikeCard(e._id).then((()=>{e.updateLikes()})).catch((e=>{console.error(e)})):l.likeCard(e._id).then((()=>{e.updateLikes(e._id)})).catch((e=>{console.error(e)}))}function b(e){u.open(e)}function L(e,t){_.open(),_.setSubmitAction((()=>{_.setLoading(!0),l.deleteCard(e).then((()=>{t.removeCard(),_.close()})).catch((e=>{console.log(e)})).finally((()=>{_.setLoading(!1)}))}))}function f(e){return new r(e,"#card-template",b,E,L).generateCard()}var S;s.addEventListener("click",(()=>{v.open()})),e.addEventListener("click",(()=>{!function(){const{name:e,about:t}=c.getUserInfo();document.querySelector("#input-name").value=e,document.querySelector("#input-description").value=t}(),d["profile-form"].resetFormValidation(),p.open()})),t.addEventListener("click",(()=>{m.open()})),v.setEventListeners(),m.setEventListeners(),p.setEventListeners(),_.setEventListeners(),u.setEventListeners(),S={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(S.formSelector)).forEach((e=>{const t=new i(S,e),s=e.getAttribute("name");s&&(d[s]=t,t.enableValidation())}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,